# Form implementation generated from reading ui file 'GIT_TABLE.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
import json
import pandas as pd


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        self.buttons=[]

        with open('STYLESHEETS_BUTTONS.json', 'r', encoding='utf-8') as json_file:
                self.data = json.load(json_file)

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        MainWindow.setStyleSheet("QTabBar::tab {\n"
                                "background-color: #161616;\n"
                                "color: white;\n"
                                "padding: 5px;\n"
                                "}\n"
                                "\n"
                                "QTabBar::tab:selected {\n"
                                "background-color: #161616;\n"
                                "color: white;\n"
                                "border: 1px solid white;\n"
                                "                        }")
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setStyleSheet("background-color: #161616")
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setContentsMargins(15, 0, 15, -1)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.cabecalho = QtWidgets.QLabel(parent=self.centralwidget)
        self.cabecalho.setMinimumSize(QtCore.QSize(0, 40))
        self.cabecalho.setMaximumSize(QtCore.QSize(16777215, 40))
        self.cabecalho.setStyleSheet("COLOR: WHITE;\n"
"FONT-SIZE: 20px;\n"
"font-weight: bold;\n"
"padding-left: 25px;\n"
"border-bottom: 2px solid white;")
        self.cabecalho.setObjectName("cabecalho")
        self.verticalLayout.addWidget(self.cabecalho)
        self.frame = QtWidgets.QFrame(parent=self.centralwidget)
        self.frame.setMinimumSize(QtCore.QSize(0, 55))
        self.frame.setStyleSheet("")
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame.setObjectName("frame")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")

        self.btn_emaberto = QtWidgets.QPushButton(parent=self.frame)
        self.btn_emaberto.setMinimumSize(QtCore.QSize(100, 0))
        self.btn_emaberto.setMaximumSize(QtCore.QSize(100, 16777215))
        self.btn_emaberto.setStyleSheet("COLOR:  rgb(255, 255, 0);\ntext-align: bottom;\nborder: none;\nborder-bottom: 1px solid  rgb(255, 255, 0);")
        self.btn_emaberto.setObjectName("btn_emaberto")
        self.horizontalLayout.addWidget(self.btn_emaberto)
        self.buttons.append(self.btn_emaberto)

        self.btn_emproducao = QtWidgets.QPushButton(parent=self.frame)
        self.btn_emproducao.setMinimumSize(QtCore.QSize(100, 0))
        self.btn_emproducao.setMaximumSize(QtCore.QSize(100, 16777215))
        self.btn_emproducao.setStyleSheet("COLOR:  white;\ntext-align: bottom;\nborder: none;\n")
        self.btn_emproducao.setObjectName("btn_emproducao")
        self.horizontalLayout.addWidget(self.btn_emproducao)
        self.buttons.append(self.btn_emproducao)

        self.btn_emseparacao = QtWidgets.QPushButton(parent=self.frame)
        self.btn_emseparacao.setMinimumSize(QtCore.QSize(100, 0))
        self.btn_emseparacao.setMaximumSize(QtCore.QSize(100, 16777215))
        self.btn_emseparacao.setStyleSheet("COLOR:  white;\ntext-align: bottom;\nborder: none;\n")
        self.btn_emseparacao.setObjectName("btn_emseparacao")
        self.horizontalLayout.addWidget(self.btn_emseparacao)
        self.buttons.append(self.btn_emseparacao)

        self.btn_em_transito = QtWidgets.QPushButton(parent=self.frame)
        self.btn_em_transito.setMinimumSize(QtCore.QSize(100, 0))
        self.btn_em_transito.setMaximumSize(QtCore.QSize(100, 16777215))
        self.btn_em_transito.setStyleSheet("COLOR:  white;\ntext-align: bottom;\nborder: none;\n")
        self.btn_em_transito.setObjectName("btn_em_transito")
        self.horizontalLayout.addWidget(self.btn_em_transito)
        self.buttons.append(self.btn_em_transito)

        self.btn_entregue = QtWidgets.QPushButton(parent=self.frame)
        self.btn_entregue.setMinimumSize(QtCore.QSize(100, 0))
        self.btn_entregue.setMaximumSize(QtCore.QSize(100, 16777215))
        self.btn_entregue.setStyleSheet("COLOR:  white;\ntext-align: bottom;\nborder: none;\n")
        self.btn_entregue.setObjectName("btn_entregue")
        self.horizontalLayout.addWidget(self.btn_entregue)
        self.buttons.append(self.btn_entregue)

        self.btn_cancelado = QtWidgets.QPushButton(parent=self.frame)
        self.btn_cancelado.setMinimumSize(QtCore.QSize(100, 0))
        self.btn_cancelado.setMaximumSize(QtCore.QSize(100, 16777215))
        self.btn_cancelado.setStyleSheet("COLOR:  white;\ntext-align: bottom;\nborder: none;\n")
        self.btn_cancelado.setObjectName("btn_cancelado")
        self.horizontalLayout.addWidget(self.btn_cancelado)
        self.buttons.append(self.btn_cancelado)

        self.verticalLayout.addWidget(self.frame, 0, QtCore.Qt.AlignmentFlag.AlignLeft)
        self.tabela_pedidos = QtWidgets.QTableWidget(parent=self.centralwidget)
        self.tabela_pedidos.horizontalHeader().setSectionResizeMode(QtWidgets.QHeaderView.ResizeMode.Stretch)
        self.tabela_pedidos.setStyleSheet("QTableWidget{border: none;}\n"
"QHeaderView::section{color: white;\n"
"background-color: #161616;\n"
"border: none;}")
        self.tabela_pedidos.setObjectName("tabela_pedidos")
        self.tabela_pedidos.setColumnCount(5)
        self.tabela_pedidos.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tabela_pedidos.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tabela_pedidos.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tabela_pedidos.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tabela_pedidos.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tabela_pedidos.setHorizontalHeaderItem(4, item)
        self.verticalLayout.addWidget(self.tabela_pedidos)

        self.label_create = QtWidgets.QLabel(parent=self.frame)
        self.label_create.setStyleSheet('color: white; font-size: 12px; font-weight: bold')
        self.verticalLayout.addWidget(self.label_create)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.cabecalho.setText(_translate("MainWindow", "PEDIDOS"))
        self.btn_emaberto.setText(_translate("MainWindow", "EM ABERTO\n102"))
        self.btn_emproducao.setText(_translate("MainWindow", "EM PRODUÇÃO\n102"))
        self.btn_emseparacao.setText(_translate("MainWindow", "EM SEPARAÇÃO\n102"))
        self.btn_em_transito.setText(_translate("MainWindow", "EM TRÂNSITO\n102"))
        self.btn_entregue.setText(_translate("MainWindow", "ENTREGUE\n102"))
        self.btn_cancelado.setText(_translate("MainWindow", "CANCELADO\n102"))
        item = self.tabela_pedidos.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "ID PEDIDO"))
        item = self.tabela_pedidos.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "LINHA DE MONTAGEM"))
        item = self.tabela_pedidos.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "MODELO"))
        item = self.tabela_pedidos.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "QTT PRODUZIDA"))
        item = self.tabela_pedidos.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "STATUS"))
        self.label_create.setText(_translate("MainWindow", "CRIADO POR: L30Z1NH0"))

        self.insert_info_table('em aberto')

        for button in self.buttons:
                button.clicked.connect(lambda checked, b=button: self.clicked_btn(b))
        self.btn_emaberto.clicked.connect(lambda: self.insert_info_table('em aberto'))
        self.btn_emproducao.clicked.connect(lambda: self.insert_info_table('em producao'))
        self.btn_emseparacao.clicked.connect(lambda: self.insert_info_table('em separacao'))
        self.btn_em_transito.clicked.connect(lambda: self.insert_info_table('em transito'))
        self.btn_entregue.clicked.connect(lambda: self.insert_info_table('entregue'))
        self.btn_cancelado.clicked.connect(lambda: self.insert_info_table('cancelado'))



    def style_table(self):
        for row in range(self.tabela_pedidos.rowCount()):
            for col in range(self.tabela_pedidos.columnCount()):
                item = self.tabela_pedidos.item(row, col)
                if item is not None:
                    if row % 2 == 0:
                        item.setBackground(QtGui.QColor(22, 22, 22))  # Linhas pares com fundo preto
                        item.setForeground(QtGui.QColor(255, 255, 255))  # Texto em branco para melhor visibilidade
                    else:
                        item.setBackground(QtGui.QColor(44, 44, 44))  # Linhas ímpares com fundo branco
                        item.setForeground(QtGui.QColor(255, 255, 255))  # Texto em preto para melhor visibilidade
                else:
                    default_background = QtGui.QColor(255, 255, 255)  # Cor de fundo padrão
                    default_foreground = QtGui.QColor(0, 0, 0)  # Cor do texto padrão
                    item = QtWidgets.QTableWidgetItem()  # Crie um novo item para a célula vazia
                    item.setBackground(default_background)
                    item.setForeground(default_foreground)
                    self.tabela_pedidos.setItem(row, col, item)  # Defina o item na célula
    
    
    def clicked_btn(self, btn):
        btn_style = self.get_style(str(btn.objectName()))
        if btn_style:
                for btn_styles in self.buttons:
                    if btn_styles == btn:
                        btn.setStyleSheet(btn_style)
                    else:
                        btn_styles.setStyleSheet('COLOR:  white;\ntext-align: bottom;\nborder: none;\n')
        

    def get_style(self, button_id):
        for button_data in self.data['buttons']:
            if button_id in button_data['id_button']:
                return button_data['style']
        return None
    
    def insert_info_table(self, status):
        self.tabela_pedidos.setRowCount(0)
        df = pd.read_csv('DADOS.csv', header=None, encoding='iso-8859-1')
        print(df)
        # Filtrar as linhas com a última coluna igual a 'em aberto'
        df_filtered = df[df.iloc[:, -1] == status]
        
        num_rows, num_cols = df_filtered.shape
        self.tabela_pedidos.setRowCount(num_rows)
        self.tabela_pedidos.setColumnCount(num_cols)
        
        # Adicionar as linhas filtradas ao QTableWidget
        for i, (index, row_data) in enumerate(df_filtered.iterrows()):  # Descompactando o par (index, row_data)
            for j, value in enumerate(row_data):
                item = QtWidgets.QTableWidgetItem(str(value))
                item.setTextAlignment(QtCore.Qt.AlignmentFlag.AlignHCenter | QtCore.Qt.AlignmentFlag.AlignVCenter)
                self.tabela_pedidos.setItem(i, j, item)
        
        # Aplicar o estilo à tabela
        self.style_table()
         

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
